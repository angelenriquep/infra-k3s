---
# ServiceAccount for backend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: default
  labels:
    app: backend
---
# Backend with PostgreSQL connection
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: default
  labels:
    app: backend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: v1.0.0
    spec:
      serviceAccountName: backend
      containers:
        - name: backend
          image: mockingbird2912/api-gateway-backend:v1.0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: ENVIRONMENT
              value: "kubernetes"
            - name: DB_HOST
              value: "api-gateway-postgres.default.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "api_gateway_db"
            - name: DB_USER
              value: "api_gateway_app"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-gateway-app.api-gateway-postgres.credentials.postgresql.acid.zalan.do
                  key: password
            - name: DB_SSLMODE
              value: "require"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
---
# Service for backend
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: default
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
